!obj:pylearn2.train.Train {

    dataset: &train !obj:pylearn2.datasets.zca_dataset.ZCA_Dataset {
        preprocessed_dataset: !pkl: "${PYLEARN2_DATA_PATH}/moe_face/pylearn2_gcn_whitened/train.pkl",
        preprocessor: !pkl: "${PYLEARN2_DATA_PATH}/moe_face/pylearn2_gcn_whitened/preprocessor.pkl",
        start: 0,
        stop: 12490,
        axes: ['b', 'c', 0, 1]
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 128,
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [32, 32],
            num_channels: 3,
            axes: ['b', 'c', 0, 1]
        },
        layers: [ 
            !obj:pylearn2.models.mlp.ConvRectifiedLinear {
                layer_name: 'h0',
                tied_b: 1,
                W_lr_scale: .05,
                b_lr_scale: .05,
                output_channels: 48,
                kernel_shape: [5, 5],
                pool_shape: [4, 4],
                pool_stride: [2, 2],
                irange: .005,
                max_kernel_norm: .9 
            }, 
            !obj:pylearn2.models.mlp.ConvRectifiedLinear {
                layer_name: 'h1',
                tied_b: 1,
                W_lr_scale: .05,
                b_lr_scale: .05,
                output_channels: 128,
                kernel_shape: [5, 5],
                pool_shape: [4, 4],
                pool_stride: [2, 2],
                irange: .005,
                max_kernel_norm: 1.9365 
            }, 
            !obj:pylearn2.models.mlp.Softmax {
                max_col_norm: 1.9365,
                layer_name: 'y',
                n_classes: 176,
                istdev: .005
            }
        ],
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: 0.9,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: 0.5
        },
        train_iteration_mode: 'even_shuffled_sequential',
        monitor_iteration_mode: 'even_sequential',

        monitoring_dataset: {
            'valid' : !obj:pylearn2.datasets.zca_dataset.ZCA_Dataset {
                preprocessed_dataset: !pkl: "${PYLEARN2_DATA_PATH}/moe_face/pylearn2_gcn_whitened/train.pkl",
                preprocessor: !pkl: "${PYLEARN2_DATA_PATH}/moe_face/pylearn2_gcn_whitened/preprocessor.pkl",
                start: 12490,
                stop: 13490,
                axes: ['b', 'c', 0, 1]
            },
        },

#        cost: !obj:pylearn2.costs.cost.SumOfCosts { 
#            costs: [
#                !obj:pylearn2.costs.cost.MethodCost {
#                    method: 'cost_from_X'
#                }, 
#                !obj:pylearn2.costs.mlp.WeightDecay {
#                    coeffs: [ .00005, .00005, .00005 ]
#                }
#            ]
#        },
        cost: !obj:pylearn2.costs.mlp.dropout.Dropout {
            input_include_probs: { 'h0' : .8 },
            input_scales: { 'h0': 1. }
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 100
        },
    },
    extensions: [ 
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
            channel_name: 'valid_y_misclass',
            save_path: "conv_best.pkl"
        }, 
        !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: .6
        },
        !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {
            start: 1,
            saturate: 250,
            decay_factor: .01
        },
    ],

    save_path: "conv.pkl",
    save_freq: 1
}

